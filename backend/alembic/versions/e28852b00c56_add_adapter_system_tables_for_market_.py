"""Add adapter system tables for market data provider management

Revision ID: e28852b00c56
Revises: d950c121c96d
Create Date: 2025-09-19 20:32:05.724212

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e28852b00c56'
down_revision = 'd950c121c96d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adapter_registry',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('adapter_name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('supports_real_time', sa.Boolean(), nullable=False),
    sa.Column('supports_historical', sa.Boolean(), nullable=False),
    sa.Column('supports_bulk_quotes', sa.Boolean(), nullable=False),
    sa.Column('max_symbols_per_request', sa.Integer(), nullable=False),
    sa.Column('rate_limit_per_minute', sa.Integer(), nullable=True),
    sa.Column('rate_limit_per_day', sa.Integer(), nullable=True),
    sa.Column('rate_limit_per_month', sa.Integer(), nullable=True),
    sa.Column('cost_per_call_usd', sa.String(length=20), nullable=True),
    sa.Column('cost_model', sa.String(length=50), nullable=True),
    sa.Column('config_schema', sa.JSON(), nullable=False),
    sa.Column('config_example', sa.JSON(), nullable=True),
    sa.Column('provider_url', sa.String(length=200), nullable=True),
    sa.Column('documentation_url', sa.String(length=200), nullable=True),
    sa.Column('signup_url', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('adapter_name')
    )
    op.create_table('market_data_providers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('api_key', sa.String(length=255), nullable=True),
    sa.Column('base_url', sa.String(length=255), nullable=True),
    sa.Column('rate_limit_per_minute', sa.Integer(), nullable=False),
    sa.Column('rate_limit_per_day', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('market_data_usage_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('metric_id', sa.String(length=100), nullable=False),
    sa.Column('provider_id', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('portfolio_id', sa.UUID(), nullable=True),
    sa.Column('request_type', sa.String(length=50), nullable=False),
    sa.Column('requests_count', sa.Integer(), nullable=True),
    sa.Column('data_points_fetched', sa.Integer(), nullable=True),
    sa.Column('cost_estimate', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=False),
    sa.Column('time_bucket', sa.String(length=20), nullable=False),
    sa.Column('rate_limit_hit', sa.Boolean(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('avg_response_time_ms', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stocks',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('company_name', sa.String(length=200), nullable=False),
    sa.Column('exchange', sa.String(length=50), nullable=False),
    sa.Column('current_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('previous_close', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('daily_change', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('daily_change_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'HALTED', 'SUSPENDED', 'DELISTED', name='stockstatus'), nullable=True),
    sa.Column('last_price_update', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stocks_symbol'), 'stocks', ['symbol'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='userrole'), nullable=False),
    sa.Column('email_config', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('api_keys',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('key_hash', sa.String(length=255), nullable=False),
    sa.Column('permissions', sa.Text(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key_hash')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.Enum('PORTFOLIO_CREATED', 'PORTFOLIO_UPDATED', 'PORTFOLIO_DELETED', 'PORTFOLIO_SOFT_DELETED', 'PORTFOLIO_HARD_DELETED', 'TRANSACTION_CREATED', 'TRANSACTION_UPDATED', 'TRANSACTION_DELETED', 'HOLDING_CREATED', 'HOLDING_UPDATED', 'HOLDING_DELETED', 'USER_LOGIN', 'USER_LOGOUT', 'USER_CREATED', 'USER_UPDATED', 'ADMIN_ACTION_PERFORMED', 'PROVIDER_ENABLED', 'PROVIDER_DISABLED', 'PROVIDER_PAUSED', 'PROVIDER_RESUMED', 'PROVIDER_CONFIGURED', 'SCHEDULER_STARTED', 'SCHEDULER_STOPPED', 'SCHEDULER_PAUSED', 'SCHEDULER_RESUMED', 'SCHEDULER_CONFIGURED', 'SYSTEM_MAINTENANCE_START', 'SYSTEM_MAINTENANCE_END', name='auditeventtype'), nullable=False),
    sa.Column('event_description', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.String(length=100), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('event_metadata', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_entity', 'audit_logs', ['entity_type', 'entity_id'], unique=False)
    op.create_index('idx_audit_logs_timestamp_desc', 'audit_logs', [sa.text('timestamp DESC')], unique=False)
    op.create_index('idx_audit_logs_user_event_time', 'audit_logs', ['user_id', 'event_type', 'timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_entity_id'), 'audit_logs', ['entity_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_entity_type'), 'audit_logs', ['entity_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_event_type'), 'audit_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('news_notices',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('stock_id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('notice_type', sa.Enum('NEWS', 'EARNINGS', 'DIVIDEND', 'MERGER_ACQUISITION', 'REGULATORY_FILING', 'CORPORATE_ACTION', 'ANALYST_REPORT', 'PRESS_RELEASE', name='newsnoticetype'), nullable=False),
    sa.Column('published_date', sa.DateTime(), nullable=False),
    sa.Column('source', sa.String(length=200), nullable=True),
    sa.Column('external_url', sa.String(length=1000), nullable=True),
    sa.Column('document_url', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('portfolios',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('total_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('daily_change', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('daily_change_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('price_last_updated', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('provider_activities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.String(length=50), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('activity_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['market_data_providers.name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('provider_configurations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('config_data', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('realtime_price_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('opening_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('high_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('low_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('previous_close', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('volume', sa.Integer(), nullable=True),
    sa.Column('market_cap', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('fifty_two_week_high', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('fifty_two_week_low', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('dividend_yield', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('pe_ratio', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('beta', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('source_timestamp', sa.DateTime(), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['market_data_providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_provider_fetched_at', 'realtime_price_history', ['provider_id', 'fetched_at'], unique=False)
    op.create_index('idx_symbol_fetched_at', 'realtime_price_history', ['symbol', 'fetched_at'], unique=False)
    op.create_index('idx_symbol_opening_price', 'realtime_price_history', ['symbol', 'opening_price'], unique=False)
    op.create_index('idx_symbol_source_timestamp', 'realtime_price_history', ['symbol', 'source_timestamp'], unique=False)
    op.create_index(op.f('ix_realtime_price_history_symbol'), 'realtime_price_history', ['symbol'], unique=False)
    op.create_table('adapter_health_checks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider_config_id', sa.UUID(), nullable=False),
    sa.Column('check_timestamp', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('response_time_ms', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('status_code', sa.String(length=10), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_type', sa.String(length=50), nullable=True),
    sa.Column('endpoint_tested', sa.String(length=200), nullable=True),
    sa.Column('test_symbol', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['provider_config_id'], ['provider_configurations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cost_tracking_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider_config_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('api_calls_count', sa.DECIMAL(precision=10, scale=0), nullable=False),
    sa.Column('total_cost_usd', sa.DECIMAL(precision=10, scale=4), nullable=False),
    sa.Column('rate_limit_hits', sa.DECIMAL(precision=10, scale=0), nullable=False),
    sa.Column('quota_usage_percent', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('cost_breakdown', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['provider_config_id'], ['provider_configurations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('holdings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('portfolio_id', sa.Uuid(), nullable=False),
    sa.Column('stock_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('average_cost', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('portfolio_valuations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('portfolio_id', sa.UUID(), nullable=False),
    sa.Column('total_value', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('total_cost_basis', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('total_gain_loss', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('total_gain_loss_percent', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('day_change', sa.Numeric(precision=15, scale=4), nullable=True),
    sa.Column('day_change_percent', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('holdings_count', sa.Integer(), nullable=False),
    sa.Column('breakdown', sa.JSON(), nullable=True),
    sa.Column('calculated_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_stale', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolio_valuations_portfolio_id'), 'portfolio_valuations', ['portfolio_id'], unique=False)
    op.create_table('provider_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider_config_id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('request_count', sa.Integer(), nullable=False),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('total_latency_ms', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('avg_latency_ms', sa.DECIMAL(precision=8, scale=2), nullable=False),
    sa.Column('rate_limit_hits', sa.Integer(), nullable=False),
    sa.Column('circuit_breaker_state', sa.String(length=20), nullable=False),
    sa.Column('provider_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['provider_config_id'], ['provider_configurations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('realtime_symbols',
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('current_price', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=True),
    sa.Column('market_cap', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('latest_history_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['latest_history_id'], ['realtime_price_history.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['market_data_providers.id'], ),
    sa.PrimaryKeyConstraint('symbol')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('portfolio_id', sa.Uuid(), nullable=False),
    sa.Column('stock_id', sa.Uuid(), nullable=False),
    sa.Column('transaction_type', sa.Enum('BUY', 'SELL', 'DIVIDEND', 'STOCK_SPLIT', 'REVERSE_SPLIT', 'TRANSFER_IN', 'TRANSFER_OUT', 'SPIN_OFF', 'MERGER', 'BONUS_SHARES', name='transactiontype'), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('price_per_share', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('fees', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=False),
    sa.Column('processed_date', sa.DateTime(), nullable=True),
    sa.Column('source_type', sa.Enum('EMAIL', 'MANUAL', 'API', name='sourcetype'), nullable=False),
    sa.Column('source_reference', sa.String(length=255), nullable=True),
    sa.Column('broker_reference', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('realtime_symbols')
    op.drop_table('provider_metrics')
    op.drop_index(op.f('ix_portfolio_valuations_portfolio_id'), table_name='portfolio_valuations')
    op.drop_table('portfolio_valuations')
    op.drop_table('holdings')
    op.drop_table('cost_tracking_records')
    op.drop_table('adapter_health_checks')
    op.drop_index(op.f('ix_realtime_price_history_symbol'), table_name='realtime_price_history')
    op.drop_index('idx_symbol_source_timestamp', table_name='realtime_price_history')
    op.drop_index('idx_symbol_opening_price', table_name='realtime_price_history')
    op.drop_index('idx_symbol_fetched_at', table_name='realtime_price_history')
    op.drop_index('idx_provider_fetched_at', table_name='realtime_price_history')
    op.drop_table('realtime_price_history')
    op.drop_table('provider_configurations')
    op.drop_table('provider_activities')
    op.drop_table('portfolios')
    op.drop_table('news_notices')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_event_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_entity_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_entity_id'), table_name='audit_logs')
    op.drop_index('idx_audit_logs_user_event_time', table_name='audit_logs')
    op.drop_index('idx_audit_logs_timestamp_desc', table_name='audit_logs')
    op.drop_index('idx_audit_logs_entity', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_stocks_symbol'), table_name='stocks')
    op.drop_table('stocks')
    op.drop_table('market_data_usage_metrics')
    op.drop_table('market_data_providers')
    op.drop_table('adapter_registry')
    # ### end Alembic commands ###