openapi: 3.0.3
info:
  title: Market Data Adapter Management API
  description: Admin API for managing market data provider adapters
  version: 1.0.0
  contact:
    name: Portfolio Manager Team

servers:
  - url: http://localhost:8001/api/v1
    description: Development server

security:
  - BearerAuth: []

paths:
  /admin/adapters:
    get:
      summary: List all configured adapters
      description: Retrieve all market data provider adapters with their current status
      tags:
        - Adapter Management
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of configured adapters
          content:
            application/json:
              schema:
                type: object
                properties:
                  adapters:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdapterConfiguration'
                  total:
                    type: integer
                    description: Total number of adapters
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Register new adapter
      description: Create a new market data provider adapter configuration
      tags:
        - Adapter Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdapterRequest'
      responses:
        '201':
          description: Adapter created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterConfiguration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          description: Adapter with same name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /admin/adapters/{adapterId}:
    get:
      summary: Get adapter details
      description: Retrieve detailed information about a specific adapter
      tags:
        - Adapter Management
      security:
        - BearerAuth: []
      parameters:
        - name: adapterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the adapter
      responses:
        '200':
          description: Adapter details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterConfiguration'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update adapter configuration
      description: Update an existing adapter's configuration
      tags:
        - Adapter Management
      security:
        - BearerAuth: []
      parameters:
        - name: adapterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the adapter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdapterRequest'
      responses:
        '200':
          description: Adapter updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterConfiguration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Remove adapter
      description: Disable and remove an adapter configuration
      tags:
        - Adapter Management
      security:
        - BearerAuth: []
      parameters:
        - name: adapterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the adapter
      responses:
        '204':
          description: Adapter removed successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /admin/adapters/{adapterId}/metrics:
    get:
      summary: Get adapter metrics
      description: Retrieve real-time performance metrics for a specific adapter
      tags:
        - Adapter Metrics
      security:
        - BearerAuth: []
      parameters:
        - name: adapterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the adapter
        - name: timeRange
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 24h
          description: Time range for metrics
        - name: granularity
          in: query
          schema:
            type: string
            enum: [minute, hour, day]
            default: hour
          description: Metrics granularity
      responses:
        '200':
          description: Adapter metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterMetrics'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /admin/adapters/{adapterId}/health:
    get:
      summary: Get adapter health status
      description: Check the current health status of an adapter
      tags:
        - Adapter Health
      security:
        - BearerAuth: []
      parameters:
        - name: adapterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the adapter
      responses:
        '200':
          description: Adapter health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterHealthStatus'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Run health check
      description: Manually trigger a health check for the adapter
      tags:
        - Adapter Health
      security:
        - BearerAuth: []
      parameters:
        - name: adapterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the adapter
      responses:
        '200':
          description: Health check completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterHealthStatus'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /admin/adapters/registry:
    get:
      summary: List available adapter types
      description: Get all available adapter types that can be configured
      tags:
        - Adapter Registry
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Available adapter types
          content:
            application/json:
              schema:
                type: object
                properties:
                  adapters:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdapterType'
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AdapterConfiguration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier
        provider_name:
          type: string
          description: Type of market data provider
          example: alpha_vantage
        display_name:
          type: string
          description: Human-readable name
          example: Alpha Vantage Production
        is_active:
          type: boolean
          description: Whether adapter is currently active
        config_data:
          type: object
          description: Provider-specific configuration
          additionalProperties: true
        created_at:
          type: string
          format: date-time
          description: When adapter was created
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
        created_by_user_id:
          type: string
          format: uuid
          description: Admin user who created the adapter
        current_status:
          $ref: '#/components/schemas/AdapterStatus'
      required:
        - id
        - provider_name
        - display_name
        - is_active

    CreateAdapterRequest:
      type: object
      properties:
        provider_name:
          type: string
          description: Type of market data provider
          example: alpha_vantage
        display_name:
          type: string
          description: Human-readable name
          example: Alpha Vantage Production
        config_data:
          type: object
          description: Provider-specific configuration
          additionalProperties: true
        is_active:
          type: boolean
          description: Whether to activate immediately
          default: false
      required:
        - provider_name
        - display_name
        - config_data

    UpdateAdapterRequest:
      type: object
      properties:
        display_name:
          type: string
          description: Human-readable name
        config_data:
          type: object
          description: Provider-specific configuration
          additionalProperties: true
        is_active:
          type: boolean
          description: Whether adapter should be active

    AdapterStatus:
      type: object
      properties:
        health:
          type: string
          enum: [healthy, degraded, unhealthy, unknown]
          description: Current health status
        last_successful_call:
          type: string
          format: date-time
          description: Timestamp of last successful API call
        circuit_breaker_state:
          type: string
          enum: [closed, open, half_open]
          description: Current circuit breaker state
        error_message:
          type: string
          description: Latest error message if unhealthy

    AdapterMetrics:
      type: object
      properties:
        adapter_id:
          type: string
          format: uuid
        time_range:
          type: string
          description: Requested time range
        granularity:
          type: string
          description: Data granularity
        data_points:
          type: array
          items:
            $ref: '#/components/schemas/MetricDataPoint'
        summary:
          $ref: '#/components/schemas/MetricSummary'

    MetricDataPoint:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        request_count:
          type: integer
          minimum: 0
        success_count:
          type: integer
          minimum: 0
        error_count:
          type: integer
          minimum: 0
        avg_latency_ms:
          type: number
          minimum: 0
        rate_limit_hits:
          type: integer
          minimum: 0
        cost_units:
          type: number
          format: decimal
          minimum: 0

    MetricSummary:
      type: object
      properties:
        total_requests:
          type: integer
          minimum: 0
        success_rate:
          type: number
          minimum: 0
          maximum: 1
          description: Success rate as decimal (0-1)
        avg_latency_ms:
          type: number
          minimum: 0
        total_cost_units:
          type: number
          format: decimal
          minimum: 0
        estimated_cost_usd:
          type: number
          format: decimal
          minimum: 0

    AdapterHealthStatus:
      type: object
      properties:
        adapter_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        last_check:
          type: string
          format: date-time
        response_time_ms:
          type: number
          minimum: 0
        error_message:
          type: string
        metadata:
          type: object
          additionalProperties: true

    AdapterType:
      type: object
      properties:
        name:
          type: string
          description: Adapter type identifier
          example: alpha_vantage
        display_name:
          type: string
          description: Human-readable name
          example: Alpha Vantage
        description:
          type: string
          description: Adapter description
        supported_features:
          type: array
          items:
            type: string
          description: List of supported features
        required_config_fields:
          type: object
          description: JSON schema for required configuration
        default_config:
          type: object
          description: Default configuration values
        is_enabled:
          type: boolean
          description: Whether adapter type is available

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error type
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          additionalProperties: true
          description: Additional error details
      required:
        - error
        - message

  responses:
    BadRequest:
      description: Invalid request data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      description: Admin access required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'